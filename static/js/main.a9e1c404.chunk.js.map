{"version":3,"sources":["api/api.jsx","components/CoinList/CoinList.jsx","components/Selector/Selector.jsx","App.js","index.js"],"names":["getCoinList","listLength","a","option","method","BASE_URL","fetch","then","response","ok","Error","status","statusText","json","CoinList","coinsList","console","log","className","map","coin","id","name","image","market_cap_rank","current_price","ath","ath_change_percentage","total_supply","src","alt","toFixed","Math","round","Selector","setListLength","setLoading","htmlFor","value","onChange","event","currentTarget","App","useState","loading","setCoinList","useEffect","list","Container","Row","Col","Button","variant","onClick","Spinner","animation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9e1c404.chunk.js","sourcesContent":["export const getCoinList = async (listLength, option = { method: 'GET' }) => {\n  const BASE_URL = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=${listLength}&page=1&sparkline=false`;\n  return await fetch(BASE_URL, option)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};","export const CoinList = ({ coinsList }) => {\n  console.log(coinsList);\n  return (\n    <div className=\"coin_list\">\n      <div className=\"coin_list__item\">\n        <span className=\"coin coin__rank\">#</span>\n        <span className=\"coin\">Icon</span>\n        <span className=\"coin coin__name\">Name</span>\n        <span className=\"coin coin__price\">Price</span>\n        <span className=\"coin coin__ath\">ATH</span>\n        <span className=\"coin coin__athp\">ATH %</span>\n        <span className=\"coin coin__sup\">Total Supply</span>\n      </div>\n      {coinsList.map(coin => {\n        const {\n          id,\n          name,\n          image,\n          market_cap_rank,\n          current_price,\n          ath,\n          ath_change_percentage,\n          total_supply,\n        } = coin;\n        return (\n          <div className=\"coin_list__item\" key={id}>\n            <span className=\"coin coin__rank\">{market_cap_rank}</span>\n            <div className=\"coin\">\n              <img\n                className=\"coin__icon\"\n                src={image}\n                alt=\"coin image\" \n              />\n            </div>\n            <span className=\"coin coin__name\">{name}</span>\n            <span className=\"coin coin__price\">\n              {current_price.toFixed(2)}\n            </span>\n            <span className=\"coin coin__ath\">{ath.toFixed(2)}</span>\n            <span className=\"coin coin__\">{ath_change_percentage.toFixed(2)}</span>\n            <span className=\"coin coin__sup\">{Math.round(total_supply)}</span>\n          </div>\n          )}\n        )\n      }\n    </div>\n  )\n}","export const Selector = ({listLength, setListLength, setLoading}) => {\n  return (\n    <label htmlFor=\"selection_list_length\">\n          <span>Select coin list length:</span>\n          <select\n            className=\"App__user-selector\"\n            value={listLength}\n            onChange={(event) => {\n              setLoading(true);\n              setListLength(event.currentTarget.value)\n            }}\n            // onChange={(event) => {\n            //   setLoading(true);\n            //   setListLength(event.currentTarget.value)\n            // }}\n          >\n            <option value=\"15\" id=\"selection_list_length\">First 15</option>\n            <option value=\"50\" id=\"selection_list_length\">First 50</option>\n            <option value=\"100\" id=\"selection_list_length\">First 100</option>\n            <option value=\"150\" id=\"selection_list_length\">First 150</option>\n            <option value=\"250\" id=\"selection_list_length\">First 250</option>\n          </select>\n    </label>\n  );\n}","import { useState, useEffect } from 'react';\nimport { getCoinList } from './api/api';\nimport { CoinList } from './components/CoinList/CoinList';\nimport { Selector } from './components/Selector/Selector';\n\nimport { Container, Row, Col, Button, Spinner } from 'react-bootstrap';\n\nimport './App.scss';\n\n\n\nfunction App() {\n  \n  const [listLength, setListLength] = useState('15');\n  const [loading, setLoading] = useState(true);\n  const [coinsList, setCoinList] = useState([]);\n\n  const BASE_URL = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=${listLength}&page=1&sparkline=false`;\n\n  useEffect(() => {\n    setLoading(true);\n    (async () => {\n      let list = await getCoinList(BASE_URL);\n      setCoinList(list);\n      setLoading(false);\n    })();\n    }, [listLength]);\n\n    console.log(loading);\n  return (\n\n    <Container className=\"container\">\n      <Row>\n        <Col>\n          <div className=\"App\">\n          <h3> Cryptocurrency board </h3>\n            <Selector\n              listLength={listLength}\n              setListLength={setListLength}\n              setLoading={setLoading}\n            />\n            <Button\n              className=\"btn\"\n              variant=\"primary\"\n              onClick={() => {\n                setLoading(true);\n                setListLength(+listLength + 1);\n                getCoinList(+listLength);\n              }}\n            >\n              UPDATE DATA\n            </Button>\n            {loading\n              ? <>\n                  <Spinner animation=\"border\" variant=\"primary\" />\n                </>\n              : <>\n                  <CoinList  coinsList={coinsList} />\n                </>\n            }\n          </div>\n        </Col>\n      </Row>\n    </Container>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}